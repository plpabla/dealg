@startuml
class System
{
    - GenericWindow windows[]
    - GenericWindow* currentWindow
    - Canvas c
    + draw() // loop over windows and next calls c.render()
    + keyboard_handler()
}


abstract GenericWindow
{
    + {abstract} draw(Canvas &c, int x, int y)
}

class Canvas
{
    + render()
    + string[H] canvas
}

System *-- Canvas
System *-- GenericWindow


class PopupWindow
class Frame
class ListWindow
{
    - vector<Item> items[]
    - int current_item_idx
    + {abstract} navigate(char)
    + add(Item*)
    + removeAll()
    + Item* getCurrentItem()
    + draw(Canvas &c, int x, int y) 
    + update_prices()
}
Frame <|-- ListWindow
Frame <|-- PopupWindow
GenericWindow <|-- Frame

abstract Item
{
    - String name
    - float price
    - float price_min
    - float price_max
    + getPrice()
    + getName()
    + setPriceRange()
    + updatePrice()
}
class Stock
{
    - int quantity
    + getQty()
    + setQty()
    + buy(int n)
    + sell(int n)
}
class Ticket
{
    
}
Item <|-- Stock
Item <|-- Ticket

ListWindow *- Item
@enduml

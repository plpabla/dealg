@startuml
class Game
{
    + keyboard_handler()
}

Game <|-- System

class System
{
    - vector<window_loc> windows
    - Canvas* pCanvas
    + addWindow(window_loc data)
    + removeLastWindow()
    + draw()
    + {abstract} keyboard_handler()
}

struct window_loc
{
    GenericWindow* pw;
    int x;
    int y;
}

System *- window_loc


abstract GenericWindow
{
    + {abstract} draw(Canvas &c, int x, int y)
}

class Canvas
{
    + render()
    + string[H] canvas
}

System *-- Canvas
window_loc *-- GenericWindow


class Baner
class Frame
class ListWindow
{
    - vector<Item> items[]
    - int current_item_idx
    + {abstract} navigate(char)
    + add(Item*)
    + removeAll()
    + Item* getCurrentItem()
    + draw(Canvas &c, int x, int y) 
    + updatePrices()
}
Frame <|-- ListWindow
Frame <|-- Baner
GenericWindow <|-- Frame

abstract Item
{
    - String name
    - float price
    - float price_min
    - float price_max
    + getPrice()
    + getName()
    + setPriceRange()
    + updatePrice()
}
class Stock
{
    - int quantity
    + getQty()
    + setQty()
    + buy(int n)
    + sell(int n)
}
class Ticket
{
    
}
Item <|-- Stock
Item <|-- Ticket

ListWindow *- Item
@enduml
